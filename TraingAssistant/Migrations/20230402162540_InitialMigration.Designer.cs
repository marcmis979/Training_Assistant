// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TraingAssistantDAL.DataAccess;

#nullable disable

namespace TraingAssistantDAL.Migrations
{
    [DbContext(typeof(TrainingAssistantContext))]
    [Migration("20230402162540_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TraingAssistantDAL.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("BurnedKcal")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("TraingAssistantDAL.Models.ExerciseMusclePart", b =>
                {
                    b.Property<int>("ExercisesId")
                        .HasColumnType("int");

                    b.Property<int>("MusclePartsId")
                        .HasColumnType("int");

                    b.HasKey("ExercisesId", "MusclePartsId");

                    b.HasIndex("MusclePartsId");

                    b.ToTable("exerciseMuscleParts");
                });

            modelBuilder.Entity("TraingAssistantDAL.Models.MusclePart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MuscleParts");
                });

            modelBuilder.Entity("TraingAssistantDAL.Models.ExerciseMusclePart", b =>
                {
                    b.HasOne("TraingAssistantDAL.Models.Exercise", "Exercise")
                        .WithMany("ExercisesMuscleParts")
                        .HasForeignKey("ExercisesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TraingAssistantDAL.Models.MusclePart", "MusclePart")
                        .WithMany("ExercisesMuscleParts")
                        .HasForeignKey("MusclePartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");

                    b.Navigation("MusclePart");
                });

            modelBuilder.Entity("TraingAssistantDAL.Models.Exercise", b =>
                {
                    b.Navigation("ExercisesMuscleParts");
                });

            modelBuilder.Entity("TraingAssistantDAL.Models.MusclePart", b =>
                {
                    b.Navigation("ExercisesMuscleParts");
                });
#pragma warning restore 612, 618
        }
    }
}
